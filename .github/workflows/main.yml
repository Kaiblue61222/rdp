name: RDP

on:
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Enable Remote Desktop
        run: |
          # Bật RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          # Cho phép qua firewall
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

            - name: Create RDP User (temporarily relax password policy)
        run: |
          # paths
          $exportPath = "C:\Windows\Temp\secpol_orig.cfg"
          $tmpPath    = "C:\Windows\Temp\secpol_tmp.cfg"
          $dbPath     = "C:\Windows\Temp\secedit.sdb"

          # Export current security policy
          secedit /export /cfg $exportPath

          # Read exported cfg, modify password settings (set complexity=0, min length=0)
          $cfg = Get-Content $exportPath -Raw
          if ($cfg -notmatch 'PasswordComplexity') {
            $cfg += "`r`nPasswordComplexity = 0"
          } else {
            $cfg = [regex]::Replace($cfg, 'PasswordComplexity\s*=\s*\d', 'PasswordComplexity = 0')
          }
          if ($cfg -notmatch 'MinimumPasswordLength') {
            $cfg += "`r`nMinimumPasswordLength = 0"
          } else {
            $cfg = [regex]::Replace($cfg, 'MinimumPasswordLength\s*=\s*\d', 'MinimumPasswordLength = 0')
          }
          Set-Content -Path $tmpPath -Value $cfg -Encoding Unicode

          # Apply temporary policy
          secedit /configure /db $dbPath /cfg $tmpPath /areas SECURITYPOLICY

          # Small wait to ensure policy applied
          Start-Sleep -Seconds 3

          # Create the user with weak password
          $User = "admin"
          $Password = "1"
          net user $User $Password /add
          net localgroup administrators $User /add
          Write-Host "User created: $User / Password: $Password"

          # Restore original policy
          secedit /configure /db $dbPath /cfg $exportPath /areas SECURITYPOLICY

          # Cleanup temp files (optional)
          Remove-Item $tmpPath -ErrorAction SilentlyContinue
          Remove-Item $dbPath -ErrorAction SilentlyContinue

      - name: Download and Install Tailscale
        run: |
          Invoke-WebRequest -Uri "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi" -OutFile tailscale.msi
          Start-Process msiexec.exe -ArgumentList '/i tailscale.msi /quiet /norestart' -Wait

      - name: Authenticate to Tailscale
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          tailscale up --authkey $Env:TAILSCALE_AUTH_KEY --hostname "GitHub-RDP" --accept-routes --accept-dns
          tailscale ip -4 > tailscale-ip.txt

      - name: Show Connection Info
        run: |
          $ip = Get-Content tailscale-ip.txt
          Write-Host "==============================="
          Write-Host "✅ Connect to RDP via Tailscale"
          Write-Host "IP: $ip"
          Write-Host "User: admin"
          Write-Host "Pass: 1"
          Write-Host "==============================="
